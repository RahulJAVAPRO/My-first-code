class Trie {
    private class TreeNode{
        TreeNode[] children;
        boolean eow;

        TreeNode(){
            children = new TreeNode[26];
            eow = false;
        }
    }

    private TreeNode root;

    public Trie() {
        root = new TreeNode();    
    }
    
    public void insert(String word) {
        TreeNode curr = root;
        for(char c : word.toCharArray()){
            int idx = c-'a';
            if(curr.children[idx] == null){
                curr.children[idx] = new TreeNode();
            }
            curr = curr.children[idx];
        }
        curr.eow = true;
    }
    
    public boolean search(String word) {
        TreeNode curr = root;
        for(char c : word.toCharArray()){
            int idx = c-'a';
            if(curr.children[idx] == null){
                return false;
            }
            curr = curr.children[idx];
        }
        return curr.eow;
    }
    
    public boolean startsWith(String prefix) {
        TreeNode curr = root;
        for(char c : prefix.toCharArray()){
            int idx = c -'a';
            if(curr.children[idx] == null){
                return false;
            }
            curr = curr.children[idx];
        }
        return true;
    }
}

/**
 * Your Trie object will be instantiated and called as such:
 * Trie obj = new Trie();
 * obj.insert(word);
 * boolean param_2 = obj.search(word);
 * boolean param_3 = obj.startsWith(prefix);
 */
